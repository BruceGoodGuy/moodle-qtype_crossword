{"version":3,"file":"crossword.min.js","sources":["../src/crossword.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * JavaScript to make crossword question.\r\n *\r\n * @module qtype_crossword/crossword\r\n * @copyright 2022 The Open University\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport {CrosswordGrid} from 'qtype_crossword/crossword_grid';\r\n\r\n/**\r\n * Get words from the table.\r\n *\r\n * @return {Object} The words object.\r\n */\r\nconst getWordsFromTable = function() {\r\n    const answersEl = document.querySelectorAll('fieldset#id_words .fcontainer .form-group.row');\r\n    const alphaRegex = /^[a-z]+/;\r\n    let words = [];\r\n    let i = 0;\r\n    let no = 0;\r\n    let word = {};\r\n\r\n    if (!answersEl) {\r\n        return words;\r\n    }\r\n\r\n    answersEl.forEach(obj => {\r\n        let inputEl = obj.querySelectorAll('input[type=\"text\"]');\r\n        let selectEl = obj.querySelectorAll('select');\r\n\r\n        if (inputEl.length > 0) {\r\n            inputEl.forEach(inputEl => {\r\n                const name = inputEl.name.match(alphaRegex)?.pop();\r\n                word[name] = inputEl.value.trim();\r\n            });\r\n        }\r\n\r\n        if (selectEl.length > 0) {\r\n            selectEl.forEach(selectEl => {\r\n                const name = selectEl.name.match(alphaRegex)?.pop();\r\n                word[name] = selectEl.selectedIndex;\r\n            });\r\n        }\r\n        i++;\r\n        if (i !== 0 && i % 2 === 0) {\r\n            no++;\r\n            word.no = no;\r\n            words.push(word);\r\n            word = {};\r\n        }\r\n    });\r\n    return words;\r\n};\r\n\r\n/**\r\n * Handle action attempt crossword.\r\n *\r\n * @param {Object} options The crossword settings.\r\n */\r\nexport const attempt = (options) => {\r\n    const crossword = new CrosswordGrid(options);\r\n    crossword.buildCrossword();\r\n};\r\n\r\n/**\r\n * Handle action preview crossword.'\r\n *\r\n * @param {Object} options The crossword settings.\r\n */\r\nexport const preview = (options) => {\r\n    const element = document.querySelector(options.element);\r\n    if (element) {\r\n        element.removeAttribute('disabled');\r\n        element.addEventListener('click', function(event) {\r\n            event.preventDefault();\r\n            const columnEl = document.querySelector('select[name=\"numcolumns\"]');\r\n            const rowEl = document.querySelector('select[name=\"numrows\"]');\r\n            const words = getWordsFromTable(options.target);\r\n            const settings = {...options,\r\n                words,\r\n                colsNum: columnEl.options[columnEl.selectedIndex].text,\r\n                rowsNum: rowEl.options[rowEl.selectedIndex].text\r\n            };\r\n            const crossword = new CrosswordGrid(settings);\r\n            crossword.previewCrossword();\r\n        });\r\n    }\r\n};\r\n"],"names":["options","CrosswordGrid","buildCrossword","element","document","querySelector","removeAttribute","addEventListener","event","preventDefault","columnEl","rowEl","words","answersEl","querySelectorAll","alphaRegex","i","no","word","forEach","obj","inputEl","selectEl","length","name","match","_inputEl$name$match","pop","value","trim","_selectEl$name$match","selectedIndex","push","getWordsFromTable","target","settings","colsNum","text","rowsNum","previewCrossword"],"mappings":"sOA0EwBA,UACF,IAAIC,8BAAcD,SAC1BE,mCAQUF,gBACdG,QAAUC,SAASC,cAAcL,QAAQG,SAC3CA,UACAA,QAAQG,gBAAgB,YACxBH,QAAQI,iBAAiB,SAAS,SAASC,OACvCA,MAAMC,uBACAC,SAAWN,SAASC,cAAc,6BAClCM,MAAQP,SAASC,cAAc,0BAC/BO,MA/DQ,iBAChBC,UAAYT,SAASU,iBAAiB,iDACtCC,WAAa,cACfH,MAAQ,GACRI,EAAI,EACJC,GAAK,EACLC,KAAO,UAENL,WAILA,UAAUM,SAAQC,UACVC,QAAUD,IAAIN,iBAAiB,sBAC/BQ,SAAWF,IAAIN,iBAAiB,UAEhCO,QAAQE,OAAS,GACjBF,QAAQF,SAAQE,wCACNG,iCAAOH,QAAQG,KAAKC,MAAMV,kDAAnBW,oBAAgCC,MAC7CT,KAAKM,MAAQH,QAAQO,MAAMC,UAI/BP,SAASC,OAAS,GAClBD,SAASH,SAAQG,0CACPE,kCAAOF,SAASE,KAAKC,MAAMV,mDAApBe,qBAAiCH,MAC9CT,KAAKM,MAAQF,SAASS,iBAG9Bf,IACU,IAANA,GAAWA,EAAI,GAAM,IACrBC,KACAC,KAAKD,GAAKA,GACVL,MAAMoB,KAAKd,MACXA,KAAO,OAGRN,OA5BIA,MAsDWqB,CAAkBjC,QAAQkC,QAClCC,SAAW,IAAInC,QACjBY,MAAAA,MACAwB,QAAS1B,SAASV,QAAQU,SAASqB,eAAeM,KAClDC,QAAS3B,MAAMX,QAAQW,MAAMoB,eAAeM,MAE9B,IAAIpC,8BAAckC,UAC1BI"}